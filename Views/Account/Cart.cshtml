@model List<TheBookCave.Models.ViewModels.BookViewModel>

<!-- The following code block returns the total books in the order. -->
@{int totalBooks = 0;}
@foreach(var Book in Model)
{
    totalBooks += Book.Amount;
}

<!-- The following code block returns "book" if there is only a single book in the cart, otherwise it returns "books". -->
@{string bookVsBooks = "book";}
@if(totalBooks != 1)
{
  bookVsBooks += "s";
}

<h1 class="text-center">Your Carts<small> @totalBooks books</small></h1>
<p class="text-center">The following is a list of all items in your cart. Click the 'Proceed to Checkout' button on the bottom of the page to confirm your order.</p>
<p class="text-center">You can still modify the amount of each individual book you wish to purchase, just make sure to click the 'Update' button to get the updated prices.</p>
<hr/>
@{double totalPrice = 0;}
@foreach (var Book in Model)
{
    <!-- The following row is split into a 2-8-2 column system for indenting purposes. -->
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-8 row">
            <!-- The inside of the main body of the row is split into a 2-7-2-1 column system. -->
            <div class="col-md-2">
                <!-- The first column in the main body is used to display the book's image. -->
                <div class="thumbnail">
                    @{string path = Book.Image;}
                    <img class="image-small" src=@Url.Content(path) alt="@Book.Title">
                    @{int intRating    = ((int)(((Book.Rating * 4) + 1) / 2)) * 5; }
                    @{string stringRating = "~/images/stars/" + intRating + "StarsSmall.png"; }
                    <img src=@Url.Content(stringRating) alt="Rating" class="img-responsive center-block">
                </div>
            </div>
            <div class="col-md-7 row">
                <!-- The second column in the main body is split into a 3-9 column system. -->
                <div class="col-md-3">
                    <!-- This part is used to display the amount of the book the user has in their cart. -->
                    <br>
                    <form method="POST">
                        <input type="number" name="amount" value="@Book.Amount" class="form-control">
                        <input asp-controller="Account" asp-action="UpdateCart" asp-route-bookID="@Book.ID" value="Update" type="submit" class="form-control btn btn-primary">
                    </form>
                </div>
                <div class="col-md-9">
                    <!-- And this part is used to display the book's title and author. -->
                    <h3>
                        <a asp-controller="Book" asp-action="Details" asp-route-id="@Book.ID">@Book.Title</a>
                    </h3>
                    <h4>By @Book.Author</h4>
                </div>
            </div>
            <div class="col-md-2">
                <!-- The third column in the main body is used to display the price of the book multiplied by the amount ordered. -->
                @{double price = (Book.Price * Book.Amount);}
                @{totalPrice += price;}
                @{int endsIn0 = (int)((price * 100) % 10);}
                @{int endsIn00 = (int)((price * 100) % 100);}
                @{string lastZero = "";}
                @if(endsIn0 == 0)
                {
                    lastZero = "0";
                }
                @if(endsIn0 == 0 && endsIn00 == 0)
                {
                    lastZero = ".00";
                }
                <h3>@price<!---->@lastZero$</h3>
            </div>
            <div class="col-md-1">
                <!-- The fourth column in the main body is used to display the "Remove" button. -->
                <br>
                <form asp-action="RemoveCart" asp-controller="Account" asp-route-bookID="@Book.ID" method="POST">
                    <input type="submit" class="btn btn-danger remove-from-cart" value="Remove"/>
                </form>
            </div>
        </div>
        <div class="col-md-2"></div>
    </div>
    <!-- The following row is identical to the base structure of the previous row. The sole purpose of this one is display a horizontal line at the bottom of each book. -->
    <!-- This could have been accomplished inside the previous row but that would have required the column in line 27 to contain the row as a child element, making the code more tedious -->
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-8"><hr></div>
        <div class="col-md-2"></div>
    </div>
}
<div class="row">
    <div class="col-md-5"></div>
    <div class="col-md-2">
            @if(totalBooks != 0)
            {
                int endsIn0 = (int)((totalPrice * 100) % 10);
                int endsIn00 = (int)((totalPrice * 100) % 100);
                string lastZero = "";
                if(endsIn0 == 0)
                {
                    lastZero = "0";
                }
                if(endsIn0 == 0 && endsIn00 == 0)
                {
                    lastZero = ".00";
                }
                <h3>Total: @totalPrice<!---->@lastZero$</h3>
                <form method="POST">
                    <input type="submit" asp-controller="Account" asp-action="MakeOrder" asp-route-id="rghgjhvjhvdjhjh45347yhu" class="btn btn-primary" value="Proceed To Checkout"/>
                </form>
            }
            else
            {
                <h3>No Books in Cart!</h3>
            }
    </div>
    <div class="col-md-5"></div>
</div>

